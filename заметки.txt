Как работать с HSQL

Положить JDBC-драйвер в Tomcat - можно через Netbeans (Servers - Apache.. - Sources - добавить hsqldb.jar)
И в проект надо положить


runserver.bat --help - список доступных аргументов

новая БД:
runserver.bat --database.0 file:C:\JAVA\hsql\test1 --dbname.0 test1

Подключение:
runmanager.bat

Type: HSQL Database Engine Server
Driver: org.hsqldb.jdbcDriver
jdbc:hsqldb:hsql://localhost/test1


https://www.tutorialspoint.com/jdbc/jdbc-sample-code.htm
https://www.tutorialspoint.com/jdbc/jdbc-statements.htm
https://www.tutorialspoint.com/jdbc/preparestatement-object-example.htm

http://hsqldb.org/doc/guide/guide.html

Servlet cookbook

=====
дома:

!- добиться работоспособности. 1) напечатать строку INSERT... - готово
2) положить в questionMap
3) Формочка "Список вопросов": загрузка questionMap из БД - готово
3.5) добавить тип и текст в вопрос, убедиться, что пишется в БД и читается нормально. Доработать вывод списка
3) убедиться что записи в БД и в объектах идентичны
3) сделать форму редактирования вопроса и функционал сохранения в БД
4) сделать блок UPDATE, убедиться, что работает.
5) все хорошенько протестировать

-попробовать положить данные в таблицу //готово
-красиво оформить new2.java
-пройти еще одну главу по сервлетам
-вынести код работы с БД из сервлета
-подумать, как хранить и реплицировать данные
___> генерировать объекты по ResultSet

-форма редактирования вопроса

-начать подтотовку к сертификации, попутно расширять механизм вопросов

- схема взаимодействия с БД: вопросы заводятся с интерфейса, редактируются с интерфейса,
скрипт наката выгружается в проекте, заливается напрямую через БД
проследить за целостностью идентификаторов!

-интересная задачка: универсальная печать многомерных массивов



-- hashCode для Question

Можно ли запускать код Ruby в Java-проекте?

#Eckel on Java 8
#Bloch effective Java

вопросное конспектирование книг

изначальное написание книг в вопросном формате


Maven

-- надо ли закрывать ResultSet обязательно?


Сайт, где кажды может создать себе систему подготовки!




DROP TABLE Question IF EXISTS

CREATE TABLE Question (id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, realm VARCHAR(20))
INSERT INTO Question VALUES 





============= поразмыслить 
<?> and <? extends Object> are synonymous, as you'd expect, but there are a few cases with generics where extends Object is not actually redundant. For example, <T extends Object & Foo> will cause T to become Object under erasure, whereas with <T extends Foo> it will become Foo under erasure. (This can matter if you're trying to retain compatibility with a pre-generics API that used Object.)

(Source: http://download.oracle.com/javase/tutorial/extra/generics/convert.html; it explains why the JDK's java.util.Collections class has a method with this signature:

public static <T extends Object & Comparable<? super T>> T max(Collection<? extends T> coll