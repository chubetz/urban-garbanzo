ИЗОБРАЖЕНИЯ В КАРТОЧКАХ

1) кнопка, открывающая новое окно с библиотекой изображений, отсортированных по id
в обратном порядке
	1-1) сервлет
		- передает данные изображений, отсортированные по выбранности в вопросе, идентификатору - готово
	1-2) JSP
	- в сервлете добавляем картинки в вопрос - готово
	- перезагружаем окно с возвращением флага - перерисовать родителя - готово
	- кнопка (невидимая) на родителе, перерисовывающая страницу, либо другое решение - готово
	- три тамбнэйла в ряду - готово
2) в библиотеке - возможность заргузить изображение, чекбокс для выбора, id вопроса для связи - готово
3) в библиотеке кнопка "выбрать" - связывает с вопросом, закрывает окно. окно редактирования
перегружается по обработке события - ггтово
4) в окне редактирования - вывод выбранных изображений. - готово
4-1) при старте системы в availableImages подгружаются использованные картинки вопроса. Как и при сохранении нового. - готово
5) сервлет, возвращающий JSON-список выбранных изображений вопроса - готово
6) возможность добавить изображение - только в тексте вопроса. - готово
7) бордюр вокруг изоражения - пока не надо
8) при сохранении рассчитывать и сохранять размеры изображения - пока не надо
9) изготавливать thumbnails из расчета 100 по большему измерению. - пока не надо
10) чистить MockMap, когда больше 10, сделать LinkedHashMap и как-то организовать очередь - готово



РЕФАКТОРИНГ!

1) Перенос кода в репозиторий dgorshenin - готово
2) блок "export" в MainServlet - готово
3) JDBCUtils saveEntity и deleteEntity -  готово
3) Storage.init() - пока не буду
4) Рефакторинг IO в сохранении изображений (MainServet::uploadImage) - потом



+++ порядковые номера карточке, если тема
(плюс оптимизация редактирования порядковых номеров)


+++
Реализовать добавление изображений в карточку. Внедрить их в редактор. Если браузер не поддерживает такого, приводить ссылки на изображения. В том числе в ответах.
БОЛЕЕ ШИРОКАЯ ПОСТАНОВКА. 
- Реализация хранения файлов (asset) в системе с отслеживанием даты добавления. 
- Возможность добавить файл с диска в профиль области с автоматическим добавлением в общее хранилище файлов
- Возможность добавить файл в профиль области из внутреннего хранилища
- Возможность добавить файл с диска прямо в карточку с сохранением в области и в общем хранилище
- Возможность скачать файл из области, из общего хранилища, и даже из карточки в режиме просмотра.


- Возможность удаления файлов на любом уровне







+++
Предметная область переименовывается в Группу. Группы могут быть вложенные. При этом они остаются самостоятельными.
В группе могут быть карточки. В группу можно добавить тему. Другую группу или тему внутрь темы вложить нельзя. Карточка может быть связана с произвольным числом групп и тем.

+++
Умение стирать и перебрасывать сущности


+++
Новый тип карточки: Story. Зазубривать не надо, но желательно помнить, о чем говорится. Участвует в работе над ошибками, но не влияет на оценку. Или влияет?

+++
оптимизировать выгрузку/загрузку, чтобы генерились более эффективные SQL

+++
в режиме "освежить знания" - возможность редактировать карточки на лету (и, возможно, вставлять новые - продумать)

+++
в режиме освежить знания - возможность вернуться назад

+++
в режиме "освежить знания" - возможность начать с произвольной карточки



+++
на перспективу - сделать так, чтобы не работать с кнопками "Назад" и "Вперед" браузера


+++!!!!++++ не забыть при доработке
- имплементировать getServletInfo


+++
экспорт данных в фиксированном сортированном порядке по сущностям

+++
подсвечивать комментарий, если есть

+++
вынести строки в ресурсы и, возможно, перевести на английский. Может быть, даже сделать режим переключения "на лету"?


ИДЕИ
++!!!++
Легкодоступный набор "любимых" карточек - постоянный или временный

++!!!++
Настраиваемый объем карточки в символах. Если вводится больше - не падать, а уведомлять

===========================================================================





!!!
В профиль темы добавить галочку "только освежить" = готово
Добавить галочку в конструктор. если true - сортировать вопросы компаратором темы. - готово
не записывать результаты экзамена в этом случае.


+++ запоминать даты ответов на вопросы и иметь возможность вывести список вопросов, на которые были даны неверные ответы, для повторного ответа. Режим работы над ошибками



+++ 
в Question добавить дату регистрации (regDate), дату обновления (updateDate)

выводить информацию в форме редактирования карточки

обновлять updateDate при сохранении карточки

+++

в ThemeQuestion добавить атрибут orderNum - готово

в список всех вопросов прокидывать realmId (если вопросы с области) и themeId (если вопросы с темы)

редактирование карточки запускать с передачей themeId,realmId

сделать редактируемое поле "Порядковый номер в теме такой-то" в форме редактирования карточки, видимое только если карточка редактируется с параметром themeId
в поле выводить порядковый номер в списке карточек темы (сделать на карточке метод getOrderNum(Theme))

- хранить на объекте вопроса сет с линками
- регистрировать линки
- разрегистрировать линки
- по теме получать вопросы
- с вопросов брать линки по той же теме
- с линков брать порядковые номера






данный метод должен выводить порядковый номер. основания сортировки списка - orderNum в ThemeQuestion, либо regDate, либо id
если порядковый номер поменялся - последовательно проставить orderNum всем вопросам в теме (сущностям ThemeQuestion), чтобы получилась нумерация подряд. - готово

сделать метод getThemeComparator(Theme) - готово

!!! 
- сделать умную замену orderNum - если вопросу проставлено "4", он должен реально стать 4-ым.
сейчас он просто переместится вплотную к 4-му - готово
- сделать сохранение в БД - готово
- сделать сортировку списка вопросов по теме - по компаратору темы - готово
- если подвязка вопроса к новой теме - ставить в конец списка - готово
- при исключении темы из вопроса - теряется порядковый номер в той теме, которая не исключалась (очевидно, из-за того, что она перепривязывается) - готово

- проверить регистрацию/дерегистрацию/подкачку изменений из БД:
не сохраняются порядковые номера после повторного вкатывания скрипта с измененными данными - готово

- при возвращении к редактированию теряется порядковый номер - ничего страшного



***
БУДУЩЕЕ

- запрещать закрывать браузер, если идет сеанс редактирования

- придумать что-то, если объем текста карточки превышает допустимый (чтобы не потерять при сабмите)

- хранение произвольных файлов 

- вопросы, которые работают только в режиме "освежить" в фиксированном порядке

- начало "освежения" с выбранного вопроса

- создать новую карточку на произвольной позиции в теме, а не в конце

- возможность, просматривая одну освежающую карточку, скроллить остальные